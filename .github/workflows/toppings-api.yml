name: Toppings API

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'Infrastructure/**'
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'Infrastructure/**'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

env:
  version: "0.0.${{ github.run_number }}"
  HELM_EXPERIMENTAL_OCI: 1

jobs:

  build:
    environment: Dev
    runs-on: ubuntu-latest

    outputs:
      acr_uri: ${{ steps.get_acr_id.outputs.acr_uri }}

    steps:
    - uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - id: get_acr_id
      name: Get ACR Server
      shell: pwsh
      run: |
        $loginServer = $(az acr list --resource-group Demo-Global --query [0].loginServer).trim('"')
        echo "::set-output name=acr_uri::$loginServer"

    # https://docs.microsoft.com/azure/container-registry/container-registry-auth-service-principal
    - name: Docker Login ACR
      run: docker login ${{ steps.get_acr_id.outputs.acr_uri }} --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Build and Push Docker image
      run: |
        docker build . --file ToppingsApi/Dockerfile --tag ${{ steps.get_acr_id.outputs.acr_uri }}/toppings-api:${{ env.version }}
        docker push --all-tags ${{ steps.get_acr_id.outputs.acr_uri }}/toppings-api
      working-directory: ToppingsApi

    - name: Helm Registry Login
      run: echo ${{ secrets.AZURE_CLIENT_SECRET }} | helm registry login ${{ steps.get_acr_id.outputs.acr_uri }} --username ${{ secrets.AZURE_CLIENT_ID }} --password-stdin
      working-directory: ToppingsApi/helm
    
    - name: Save Helm Chart
      run: helm package toppings-api --version ${{ env.version }}
      working-directory: ToppingsApi/helm

    - name: Push Helm Chart
      run: helm push toppings-api-${{ env.version }}.tgz oci://${{ steps.get_acr_id.outputs.acr_uri }}/helm
      working-directory: ToppingsApi/helm

  deploy-dev:
    needs: build
    environment: Dev
    runs-on: ubuntu-latest

    env:
      cluster-name: Demo-Dev-aks
      cluster-rg: Demo-Dev

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Log into AKS
        run: az aks get-credentials --name ${{ env.cluster-name }} --resource-group ${{ env.cluster-rg }} --overwrite-existing

      - name: Helm ACR login
        run: echo ${{ secrets.AZURE_CLIENT_SECRET }} | helm registry login ${{ needs.build.outputs.acr_uri }} --username ${{ secrets.AZURE_CLIENT_ID }} --password-stdin

      - name: Download Helm Chart
        run: helm pull oci://${{ needs.build.outputs.acr_uri }}/helm/toppings-api --version ${{ env.version }}

      - name: Helm Install
        run: helm install toppings-release ./toppings-api-${{ env.version }}.tgz --atomic